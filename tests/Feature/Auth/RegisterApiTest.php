<?php

namespace Tests\Feature\Auth;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Config;
use Tests\TestCase;
use Faker\Factory as Faker;

class RegisterApiTest extends TestCase
{
    protected $email;
    protected $password;
    protected $baseUrl;
    protected $faker;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->email = Config::get('api.apiEmail');
        $this->password = Config::get('api.apiPassword');
        $this->baseUrl = Config::get('app.url') . '/api';
        $this->faker = Faker::create();
    }

    public function test_validate_name_register_request(){
        $this->json('POST', $this->baseUrl . '/register')
            ->assertStatus(422)
            ->assertJson([
                'error' => 'The name field is required.',
            ]);
    }

    public function test_validate_email_register_request()
    {
        $inputs = ['name' => $this->faker->name()];
        $this->json('POST', $this->baseUrl . '/register', $inputs)
            ->assertStatus(422)
            ->assertJson([
                'error' => 'The email field is required.',
            ]);
    }

    public function test_validate_password_register_request()
    {
        $inputs = ['name' => $this->faker->name(), 'email' => $this->faker->email()];
        $this->json('POST', $this->baseUrl . '/register', $inputs)
            ->assertStatus(422)
            ->assertJson([
                'error' => 'The password field is required.',
            ]);
    }

}
