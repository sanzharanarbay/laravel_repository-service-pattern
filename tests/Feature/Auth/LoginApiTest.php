<?php

namespace Tests\Feature\Auth;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Config;
use Tests\TestCase;

class LoginApiTest extends TestCase
{
    protected $email;
    protected $password;
    protected $baseUrl;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->email = Config::get('api.apiEmail');
        $this->password = Config::get('api.apiPassword');
        $this->baseUrl = Config::get('app.url') . '/api';
    }


    public function test_validate_email_login_request()
    {
        $this->json('POST', $this->baseUrl . '/login')
            ->assertStatus(422)
            ->assertJson([
                'error' => 'The email field is required.',
            ]);
    }


    public function test_validate_password_login_request()
    {
        $inputs = ['email' => $this->email];
        $this->json('POST', $this->baseUrl . '/login', $inputs)
            ->assertStatus(422)
            ->assertJson([
                'error' => 'The password field is required.',
            ]);
    }

    public function test_success_login_request()
    {
        $inputs = ['email' => $this->email, 'password' => $this->password];
        $this->json('POST', $this->baseUrl . '/login', $inputs)
            ->assertStatus(200)
            ->assertJsonStructure([
                'status',
                'user' => [
                    'id',
                    'name',
                    'email',
                    'email_verified_at',
                    'created_at',
                    'updated_at'
                ],
                'authorization' => [
                    'token',
                    'type'
                ]
            ]);
    }

}
